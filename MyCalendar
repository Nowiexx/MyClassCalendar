<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>ðŸ“… MyClassCalendar (Firebase)</title>
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet" />
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    #calendar {
      max-width: 900px;
      margin: 0 auto;
    }
    button {
      margin: 10px;
      padding: 10px 15px;
      background: #4b0082;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h2 style="text-align:center;">ðŸ“… My Class Calendar (Firebase)</h2>
  <div style="text-align:center;">
    <button onclick="requestNotification()">Enable Notifications</button>
  </div>
  <div id="calendar"></div>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore-compat.js"></script>
  <!-- FullCalendar -->
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

  <script>
    // Firebase Config (from you)
    const firebaseConfig = {
      apiKey: "AIzaSyB0W6A33XlgRsT9AfBfnMqARbkK0yoJqzs",
      authDomain: "myclasscalendar-3ffb9.firebaseapp.com",
      projectId: "myclasscalendar-3ffb9",
      storageBucket: "myclasscalendar-3ffb9.firebasestorage.app",
      messagingSenderId: "211711795991",
      appId: "1:211711795991:web:770a5785783b84ce778d52",
      measurementId: "G-N3LBS98RHE"
    };

    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    function requestNotification() {
      Notification.requestPermission().then(permission => {
        if (permission === "granted") {
          alert("Notifications enabled!");
        }
      });
    }

    function sendDailyNotifications(events) {
      const today = new Date().toISOString().split("T")[0];
      events.forEach(event => {
        if (event.start === today && Notification.permission === "granted") {
          new Notification("ðŸ”” Event Today", {
            body: event.title,
            icon: "https://cdn-icons-png.flaticon.com/512/10830/10830416.png"
          });
        }
      });
    }

    document.addEventListener('DOMContentLoaded', async function () {
      const calendarEl = document.getElementById('calendar');

      const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        editable: true,
        selectable: true,
        events: async function (fetchInfo, successCallback, failureCallback) {
          try {
            const snapshot = await db.collection("events").get();
            const events = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
            successCallback(events);
            sendDailyNotifications(events);
          } catch (error) {
            console.error("Error fetching events:", error);
            failureCallback(error);
          }
        },
        select: async function (info) {
          const title = prompt('Enter event title:');
          if (title) {
            const newEvent = {
              title,
              start: info.startStr,
              end: info.endStr,
              allDay: true
            };
            const docRef = await db.collection("events").add(newEvent);
            calendar.addEvent({ ...newEvent, id: docRef.id });
          }
        },
        eventChange: async function (changeInfo) {
          const event = changeInfo.event;
          await db.collection("events").doc(event.id).update({
            title: event.title,
            start: event.startStr,
            end: event.endStr,
            allDay: event.allDay
          });
        },
        eventRemove: async function (removeInfo) {
          await db.collection("events").doc(removeInfo.event.id).delete();
        }
      });

      calendar.render();
    });
  </script>
</body>
</html>
